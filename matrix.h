#ifndef MATRIX_H_INCLUDED
#define MATRIX_H_INCLUDED

typedef struct {
    int **data;
    int v;
    int x, y;
} matrix;

/**********************************************************************************************
 * Matrix
 *
 * Functions that operate on struct matrix
 *
 **********************************************************************************************/

/**********************************************************************************************
 * New Matrix
 *
 * Returns a new matrix with x*y size
 **********************************************************************************************/
matrix * new_matrix (int x, int y);

/**********************************************************************************************
 * Clear Matrix
 *
 * All elements on matrix m are set to -1
 **********************************************************************************************/
void clear_matrix (matrix *m);

/**********************************************************************************************
 * Delete Matrix
 *
 * Delete matrix and frees space allocated by it
 **********************************************************************************************/
void delete_matrix (matrix *m);

/**********************************************************************************************
 * Adjacent Matrix
 *
 * Returns an adjacency matrix 
 **********************************************************************************************/
matrix * adjacent_matrix (int x, int y, int e, int *vec);


#endif // MATRIX_H_INCLUDED